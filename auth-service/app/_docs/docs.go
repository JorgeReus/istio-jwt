// Package _docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package _docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/jwk/generate": {
            "get": {
                "description": "Randomly generates a jwk pair (public and private)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jwk"
                ],
                "summary": "Generates a new Jwk pair",
                "operationId": "generate-jwk",
                "responses": {
                    "201": {
                        "description": "JWK pair successfully created",
                        "schema": {
                            "$ref": "#/definitions/dto.JwkResponse"
                        }
                    }
                }
            }
        },
        "/jwk/public": {
            "get": {
                "description": "Gets the public JWK Set in json format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jwk"
                ],
                "summary": "Gets the public JWK Set",
                "operationId": "public-jwk",
                "responses": {
                    "200": {
                        "description": "JWK public set, for more information refer to https://tools.ietf.org/id/draft-ietf-jose-json-web-key-00.html#:~:text=Abstract,a%20set%20of%20public%20keys.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.JWK"
                            }
                        }
                    }
                }
            }
        },
        "/jwt/generate": {
            "post": {
                "description": "Randomly generates a jwt based on claims",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jwt"
                ],
                "summary": "Generates a new JWT",
                "operationId": "generate-jwt",
                "parameters": [
                    {
                        "description": "claims body",
                        "name": "claims",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JwtClaimsInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "JWT pair successfully created",
                        "schema": {
                            "$ref": "#/definitions/dto.JwtResponse"
                        }
                    }
                }
            }
        },
        "/jwt/validate-id-token": {
            "post": {
                "description": "Validates an Id token in the form of base64",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jwt"
                ],
                "summary": "Validate a new Id token",
                "operationId": "validate-id-token",
                "parameters": [
                    {
                        "description": "JWT to validate",
                        "name": "jwt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ValidateJwtInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns wheter the JWT is valid or not",
                        "schema": {
                            "$ref": "#/definitions/dto.JwtValidResponse"
                        }
                    },
                    "400": {
                        "description": "JWT has some error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.ErrorResponse"
                            }
                        }
                    }
                }
            }
        },
        "/jwt/validate-refresh-token": {
            "post": {
                "description": "Validates a refresh token in form of a base64 jwt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jwt"
                ],
                "summary": "Validate a refresh token",
                "operationId": "validate-refresh-token",
                "parameters": [
                    {
                        "description": "JWT to validate",
                        "name": "jwt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ValidateJwtInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns wheter the JWT is valid or not",
                        "schema": {
                            "$ref": "#/definitions/dto.JwtValidResponse"
                        }
                    },
                    "400": {
                        "description": "JWT has some error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controllers.ErrorResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ErrorResponse": {
            "type": "object",
            "properties": {
                "failedField": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.JWK": {
            "type": "object",
            "properties": {
                "alg": {
                    "type": "string",
                    "example": "ES256"
                },
                "crv": {
                    "type": "string",
                    "example": "P-256"
                },
                "kid": {
                    "type": "string",
                    "example": "a2V5SWRGb3JUZXN0aW5nCg=="
                },
                "kty": {
                    "type": "string",
                    "example": "EC"
                },
                "use": {
                    "type": "string",
                    "example": "sig"
                },
                "x": {
                    "type": "string",
                    "example": "eEVsaXB0aWNDb29yZGluYXRlRm9ydGVzdGluZwo="
                },
                "y": {
                    "type": "string",
                    "example": "eUVsaXB0aWNDb29yZGluYXRlRm9ydGVzdGluZwo="
                }
            }
        },
        "dto.JwkResponse": {
            "type": "object",
            "properties": {
                "private_b64": {
                    "type": "string",
                    "example": "eyJ1c2UiOiJzaWciLCJrdHkiOiJFQyIsImtpZCI6IlZMRmZNck9VbVpOM1lISThrc0xkeFktUVJoX2lFd2dscVh4N2I1TUVBeHM9IiwiY3J2IjoiUC0yNTYiLCJhbGciOiJFUzI1NiIsIngiOiJiakR5c3VfZ09McXZPSFF4cnJwa3YxVDhOSFR6aUVUU0NySHpWM3luZ0djIiwieSI6IlV5bTZEWlRObHBIaDZvRUl4YkRDb0Jya05Lb01DU3ZQOW9GOVJtNFpVdjgiLCJkIjoiVkJDYkpkang1ajFxWUg4ek1JYUNJOVpXRWVac2JlUWxIc1pZQzRJMnRnNCJ9"
                },
                "public_b64": {
                    "type": "string",
                    "example": "eyJ1c2UiOiJzaWciLCJrdHkiOiJFQyIsImtpZCI6IlZMRmZNck9VbVpOM1lISThrc0xkeFktUVJoX2lFd2dscVh4N2I1TUVBeHM9IiwiY3J2IjoiUC0yNTYiLCJhbGciOiJFUzI1NiIsIngiOiJiakR5c3VfZ09McXZPSFF4cnJwa3YxVDhOSFR6aUVUU0NySHpWM3luZ0djIiwieSI6IlV5bTZEWlRObHBIaDZvRUl4YkRDb0Jya05Lb01DU3ZQOW9GOVJtNFpVdjgifQ=="
                }
            }
        },
        "dto.JwtClaimsInput": {
            "type": "object",
            "required": [
                "fqn",
                "groups",
                "subject"
            ],
            "properties": {
                "fqn": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 3,
                    "example": "Fully Qualified Name of the Subject"
                },
                "groups": {
                    "type": "array",
                    "maxItems": 10,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "group 1",
                        "group 2"
                    ]
                },
                "subject": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3,
                    "example": "Subject of the JWT"
                }
            }
        },
        "dto.JwtResponse": {
            "type": "object",
            "properties": {
                "id_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJFUzI1NiIsImtpZCI6IlN6Qy1Ta2VUMl9vYTFwZ3lzOXpGV2VmM3hKTXZTUmtpdlBqQkloeDQ4cEk9In0.eyJhdWQiOiJpbnRlcm5hbC1jZW5ldmFsLWVtcGxveWVlcyIsImV4cCI6MTY0OTk5MjQ1OSwiZ3JvdXBzIjpudWxsLCJpYXQiOjE2NDk5ODg4NTksImlzcyI6InBsYXRhZm9ybWEuY2VuZXZhbC5lZHUubXgiLCJzdWIiOiJzdHJpbmcifQ.GCz1NTtAZyQMXYj9--dVXOn1k-0nezqP4TkP_WtI3Be4r6SCiuExmMIc6Wlb-tE48oaLaxEylJCxVimK-BdOaw"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJFUzI1NiIsImtpZCI6IlN6Qy1Ta2VUMl9vYTFwZ3lzOXpGV2VmM3hKTXZTUmtpdlBqQkloeDQ4cEk9In0.eyJ1c2VyX2lkIjoic3RyaW5nIn0.5zL9n6ZMtmeTH4gEKKOiymPkIJYZdDy5Xq_S621PHcEQVjuYsKSYlmZBmIvRd6NfltBQbUR-VPzRmFwIgYKQvA"
                }
            }
        },
        "dto.JwtValidResponse": {
            "type": "object",
            "properties": {
                "is_valid": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "dto.ValidateJwtInput": {
            "type": "object",
            "required": [
                "jwt"
            ],
            "properties": {
                "jwt": {
                    "type": "string",
                    "minLength": 10,
                    "example": "Jwt in base64 form"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "JWT authentication API",
	Description:      "Sample service for showcasing istio capabilities in edge JWT authentication",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
